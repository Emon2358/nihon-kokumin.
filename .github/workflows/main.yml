name: Download & Benchmark All Files

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  download-and-benchmark:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      ## 1. ソースチェックアウト
      - uses: actions/checkout@v4
        with:
          persist-credentials: true

      ## 2. 必要パッケージインストール
      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y jq aria2 git transmission-cli

      ## 3. トレント取得＋フォルダ名抽出 & mkdir （所要時間計測）
      - name: Extract album name & mkdir
        id: prep
        run: |
          START=$(date +%s)
          curl -L -o album.torrent https://nyaa.si/download/655498.torrent

          NAME=$(transmission-show album.torrent \
            | sed -n 's/^[[:space:]]*Name:[[:space:]]*//p')
          mkdir -p albums/"$NAME"
          END=$(date +%s)

          # prep_time 出力（マルチライン形式）
          echo "prep_time<<EOF" >> $GITHUB_OUTPUT
          echo "$((END-START))"          >> $GITHUB_OUTPUT
          echo "EOF"                     >> $GITHUB_OUTPUT

          # name 出力（マルチライン形式）
          echo "name<<EOF" >> $GITHUB_OUTPUT
          echo "$NAME"      >> $GITHUB_OUTPUT
          echo "EOF"        >> $GITHUB_OUTPUT

      ## 4. トレント内の全ファイルを並列ダウンロード（所要時間計測）
      - name: Parallel All Files download
        id: dl
        run: |
          START=$(date +%s)

          # トレント内の全ファイルを、一度に aria2c で取得
          aria2c \
            --dir=albums/"${{ steps.prep.outputs.name }}" \
            --max-connection-per-server=8 \
            --split=8 \
            --min-split-size=1M \
            --continue=true \
            --retry-wait=2 \
            --max-tries=5 \
            https://nyaa.si/download/655498.torrent

          END=$(date +%s)
          # download_time 出力
          echo "download_time<<EOF" >> $GITHUB_OUTPUT
          echo "$((END-START))"           >> $GITHUB_OUTPUT
          echo "EOF"                      >> $GITHUB_OUTPUT

      ## 5. コミット＆プッシュ（変更なければスキップ／所要時間計測）
      - name: Commit and Push
        id: push
        run: |
          START=$(date +%s)
          git config user.name "github-actions[bot]"
          git config user.email "bot@users.noreply.github.com"

          git add albums/"${{ steps.prep.outputs.name }}"
          git commit -m "Add all files: ${{ steps.prep.outputs.name }}" \
            || echo "No changes to commit"
          git push || echo "Push failed"

          END=$(date +%s)
          # push_time 出力
          echo "push_time<<EOF" >> $GITHUB_OUTPUT
          echo "$((END-START))"    >> $GITHUB_OUTPUT
          echo "EOF"               >> $GITHUB_OUTPUT

      ## 6. ベンチ結果まとめ表示
      - name: Show benchmark results
        run: |
          echo "===== Benchmark Results ====="
          echo "Prepare : ${{ steps.prep.outputs.prep_time }} sec"
          echo "Download: ${{ steps.dl.outputs.download_time }} sec"
          echo "Push    : ${{ steps.push.outputs.push_time }} sec"
